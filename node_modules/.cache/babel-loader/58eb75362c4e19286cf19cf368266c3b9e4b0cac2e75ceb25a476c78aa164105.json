{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/Development/Project-system/src/components/page-sections/ProfileShowCase.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Card, Col, DropdownItem, DropdownMenu, DropdownToggle, Row, UncontrolledDropdown } from \"reactstrap\";\nimport { dummyShowCaseItems } from \"../../dummyData\";\nimport { IoAddCircleOutline } from \"react-icons/io5\";\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport OrderTemplateModal from \"../chat/OrderTemplateModal\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ShowCaseCard from \"../cards/ShowCaseCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileShowCase = () => {\n  _s();\n  var _localStorage$getItem;\n  const navigateTo = useNavigate();\n  const [availableLists, setAvailabeLists] = useState([\"My Favourities\"]);\n  const [currentShowCaseList, setCurrentShowCaseList] = useState(dummyShowCaseItems);\n  const [newListName, setNewListName] = useState(\"\");\n  const [tempaltesModalOpen, setTemplatesModalOpen] = useState(false);\n  const toggleTemplatesModal = () => setTemplatesModalOpen(prev => !prev);\n  const handleAddToFavourity = item => {\n    let array = [...currentShowCaseList];\n    let index = array === null || array === void 0 ? void 0 : array.findIndex(i => (i === null || i === void 0 ? void 0 : i.id) === (item === null || item === void 0 ? void 0 : item.id));\n    array[index].isFavourite = !array[index].isFavourite;\n    setCurrentShowCaseList(array);\n  };\n  const handleNewListCreate = () => {\n    if (newListName !== \"\") {\n      setAvailabeLists([newListName, ...availableLists]);\n    } else toast.error(\"List name cannot be empty\");\n  };\n  const handleNewShowcaseCreate = () => {\n    let obj = {\n      id: (currentShowCaseList === null || currentShowCaseList === void 0 ? void 0 : currentShowCaseList.length) + 1,\n      type: \"JUST NEW\",\n      isFavourite: false,\n      items: []\n    };\n    setCurrentShowCaseList([...currentShowCaseList, obj]);\n  };\n  const handleCardClick = (item, index) => {\n    if ((item === null || item === void 0 ? void 0 : item.role) !== \"client\") {\n      navigateTo(`/showcase-details/${index}`, {\n        state: item\n      });\n    }\n  };\n  const role = (_localStorage$getItem = localStorage.getItem(\"role\")) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"provider\";\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"g-2 g-md-1 \",\n    style: {\n      marginTop: '10px'\n    },\n    children: [currentShowCaseList === null || currentShowCaseList === void 0 ? void 0 : currentShowCaseList.map((item, key) => /*#__PURE__*/_jsxDEV(Col, {\n      xl: 3,\n      lg: 4,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(ShowCaseCard, {\n        availableLists: availableLists,\n        handleAddToFavourity: handleAddToFavourity,\n        handleNewListCreate: handleNewListCreate,\n        newListName: newListName,\n        item: item,\n        setNewListName: setNewListName,\n        toggleTemplatesModal: toggleTemplatesModal,\n        handleCardClick: handleCardClick,\n        role: item === null || item === void 0 ? void 0 : item.role,\n        index: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Col, {\n      xl: 3,\n      lg: 4,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: \"100%\"\n        },\n        onClick: () => handleNewShowcaseCreate(),\n        className: \"btn-grey  border-none full-width bg-transparent p-0\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            height: \"100%\",\n            borderRadius: \"16px\"\n          },\n          className: \"top-pick-card cursor-pointer gap-1 d-flex flex-column align-items-center justify-content-center \",\n          children: [/*#__PURE__*/_jsxDEV(IoAddCircleOutline, {\n            \"data-role\": \"add\",\n            size: 50,\n            className: \"color-half-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"color-half-white \",\n            children: \"Create Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderTemplateModal, {\n      isOpen: tempaltesModalOpen,\n      toggle: () => toggleTemplatesModal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileShowCase, \"ykGsVGVD5njd7r6m32yAtCyThd4=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfileShowCase;\nexport default ProfileShowCase;\nvar _c;\n$RefreshReg$(_c, \"ProfileShowCase\");","map":{"version":3,"names":["Button","Card","Col","DropdownItem","DropdownMenu","DropdownToggle","Row","UncontrolledDropdown","dummyShowCaseItems","IoAddCircleOutline","useState","toast","OrderTemplateModal","useNavigate","useParams","ShowCaseCard","jsxDEV","_jsxDEV","ProfileShowCase","_s","_localStorage$getItem","navigateTo","availableLists","setAvailabeLists","currentShowCaseList","setCurrentShowCaseList","newListName","setNewListName","tempaltesModalOpen","setTemplatesModalOpen","toggleTemplatesModal","prev","handleAddToFavourity","item","array","index","findIndex","i","id","isFavourite","handleNewListCreate","error","handleNewShowcaseCreate","obj","length","type","items","handleCardClick","role","state","localStorage","getItem","className","style","marginTop","children","map","key","xl","lg","md","fileName","_jsxFileName","lineNumber","columnNumber","height","onClick","borderRadius","size","isOpen","toggle","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/Development/Project-system/src/components/page-sections/ProfileShowCase.jsx"],"sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Row,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { dummyShowCaseItems } from \"../../dummyData\";\r\nimport { IoAddCircleOutline } from \"react-icons/io5\";\r\nimport { useState } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport OrderTemplateModal from \"../chat/OrderTemplateModal\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ShowCaseCard from \"../cards/ShowCaseCard\";\r\n\r\nconst ProfileShowCase = () => {\r\n  const navigateTo = useNavigate();\r\n  const [availableLists, setAvailabeLists] = useState([\"My Favourities\"]);\r\n  const [currentShowCaseList, setCurrentShowCaseList] =\r\n    useState(dummyShowCaseItems);\r\n  const [newListName, setNewListName] = useState(\"\");\r\n  const [tempaltesModalOpen, setTemplatesModalOpen] = useState(false);\r\n  const toggleTemplatesModal = () => setTemplatesModalOpen((prev) => !prev);\r\n\r\n  const handleAddToFavourity = (item) => {\r\n    let array = [...currentShowCaseList];\r\n    let index = array?.findIndex((i) => i?.id === item?.id);\r\n    array[index].isFavourite = !array[index].isFavourite;\r\n    setCurrentShowCaseList(array);\r\n  };\r\n  const handleNewListCreate = () => {\r\n    if (newListName !== \"\") {\r\n      setAvailabeLists([newListName, ...availableLists]);\r\n    } else toast.error(\"List name cannot be empty\");\r\n  };\r\n\r\n  const handleNewShowcaseCreate = () => {\r\n    let obj = {\r\n      id: currentShowCaseList?.length + 1,\r\n      type: \"JUST NEW\",\r\n      isFavourite: false,\r\n      items:[]\r\n    };\r\n    setCurrentShowCaseList([...currentShowCaseList, obj]);\r\n  };\r\n\r\n  const handleCardClick = (item, index) => {\r\n    if (item?.role !== \"client\") {\r\n      navigateTo(`/showcase-details/${index}`, { state: item });\r\n    }\r\n  };\r\n\r\n  const role = localStorage.getItem(\"role\") ?? \"provider\";\r\n\r\n  return (\r\n    <Row className=\"g-2 g-md-1 \" style={{marginTop:'10px'}}>\r\n      {currentShowCaseList?.map((item, key) => (\r\n        <Col xl={3} lg={4} md={6} key={key}>\r\n          <ShowCaseCard\r\n            availableLists={availableLists}\r\n            handleAddToFavourity={handleAddToFavourity}\r\n            handleNewListCreate={handleNewListCreate}\r\n            newListName={newListName}\r\n            item={item}\r\n            setNewListName={setNewListName}\r\n            toggleTemplatesModal={toggleTemplatesModal}\r\n            handleCardClick={handleCardClick}\r\n            role={item?.role}\r\n            index={key}\r\n          />\r\n        </Col>\r\n      ))}\r\n\r\n      <Col xl={3} lg={4} md={6}>\r\n        <Button\r\n          style={{ height: \"100%\" }}\r\n          onClick={() => handleNewShowcaseCreate()}\r\n          className=\"btn-grey  border-none full-width bg-transparent p-0\"\r\n        >\r\n          <Card\r\n            style={{ height: \"100%\", borderRadius: \"16px\" }}\r\n            className=\"top-pick-card cursor-pointer gap-1 d-flex flex-column align-items-center justify-content-center \"\r\n          >\r\n            <IoAddCircleOutline\r\n              data-role=\"add\"\r\n              size={50}\r\n              className=\"color-half-white\"\r\n            />\r\n            <small className=\"color-half-white \">Create Success</small>\r\n          </Card>\r\n        </Button>\r\n      </Col>\r\n      <OrderTemplateModal\r\n        isOpen={tempaltesModalOpen}\r\n        toggle={() => toggleTemplatesModal()}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileShowCase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}