{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/Development/Project-system/src/components/inputs/CitySelectInput.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySelectInput = ({\n  options,\n  value,\n  setValue,\n  placeholder\n}) => {\n  _s();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n  const handleSelect = city => {\n    setValue(city);\n    setSearchTerm(city);\n    setDropdownOpen(false);\n  };\n  useEffect(() => {\n    setFilteredOptions(options);\n    setSearchTerm(\"\");\n  }, [options]);\n  useEffect(() => {\n    const filterOptions = () => {\n      if (searchTerm) {\n        const lowercasedTerm = searchTerm.toLowerCase();\n        const filtered = options.filter(option => option.toLowerCase().includes(lowercasedTerm));\n        setFilteredOptions(filtered);\n      } else {\n        setFilteredOptions(options);\n      }\n    };\n    filterOptions();\n  }, [searchTerm, options]);\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    isOpen: dropdownOpen,\n    toggle: toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n      className: \"normal-input br-0 f-4 full-width text-start border-none bg-transparent\",\n      children: value || placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search for a city...\",\n        className: \"normal-input  bg-transparent br-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"scroll\",\n          overflowX: \"hidden\"\n        },\n        children: [filteredOptions.map((city, index) => /*#__PURE__*/_jsxDEV(DropdownItem, {\n          onClick: () => {\n            handleSelect(city);\n            toggleDropdown();\n          },\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)), filteredOptions.length === 0 && /*#__PURE__*/_jsxDEV(DropdownItem, {\n          disabled: true,\n          children: \"No cities found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySelectInput, \"mZDxR3zgoY6s99WqGKpLCtesOQY=\");\n_c = CitySelectInput;\nexport default CitySelectInput;\nvar _c;\n$RefreshReg$(_c, \"CitySelectInput\");","map":{"version":3,"names":["useEffect","useState","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Input","jsxDEV","_jsxDEV","CitySelectInput","options","value","setValue","placeholder","_s","dropdownOpen","setDropdownOpen","filteredOptions","setFilteredOptions","searchTerm","setSearchTerm","toggleDropdown","prevState","handleSelect","city","filterOptions","lowercasedTerm","toLowerCase","filtered","filter","option","includes","isOpen","toggle","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","style","height","overflowY","overflowX","map","index","onClick","length","disabled","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/Development/Project-system/src/components/inputs/CitySelectInput.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nconst CitySelectInput = ({ options, value, setValue, placeholder }) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [filteredOptions, setFilteredOptions] = useState(options);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const toggleDropdown = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const handleSelect = (city) => {\r\n    setValue(city);\r\n    setSearchTerm(city);\r\n    setDropdownOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredOptions(options);\r\n    setSearchTerm(\"\");\r\n  }, [options]);\r\n\r\n  useEffect(() => {\r\n    const filterOptions = () => {\r\n      if (searchTerm) {\r\n        const lowercasedTerm = searchTerm.toLowerCase();\r\n        const filtered = options.filter((option) =>\r\n          option.toLowerCase().includes(lowercasedTerm)\r\n        );\r\n        setFilteredOptions(filtered);\r\n      } else {\r\n        setFilteredOptions(options);\r\n      }\r\n    };\r\n\r\n    filterOptions();\r\n  }, [searchTerm, options]);\r\n\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n      <DropdownToggle className=\"normal-input br-0 f-4 full-width text-start border-none bg-transparent\">\r\n        {value || placeholder}\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        <Input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Search for a city...\"\r\n          className=\"normal-input  bg-transparent br-0\"\r\n        />\r\n        <div\r\n          style={{\r\n            height: \"300px\",\r\n            overflowY: \"scroll\",\r\n            overflowX: \"hidden\",\r\n          }}\r\n        >\r\n          {filteredOptions.map((city, index) => (\r\n            <DropdownItem\r\n              key={index}\r\n              onClick={() => {\r\n                handleSelect(city);\r\n                toggleDropdown();\r\n              }}\r\n            >\r\n              {city}\r\n            </DropdownItem>\r\n          ))}\r\n          {filteredOptions.length === 0 && (\r\n            <DropdownItem disabled>No cities found</DropdownItem>\r\n          )}\r\n        </div>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default CitySelectInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}