{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/Development/Project-system/src/pages/auth/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport { Button, Card, CardBody, Col, Row, Spinner, Toast, ToastBody, ToastHeader } from \"reactstrap\";\nimport NormalInput from \"../../components/inputs/NormalInput\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const navigateTo = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const resetCode = queryParams.get(\"resetCode\");\n  const handleResetPassword = () => {\n    if (newPassword !== confirmPassword) {\n      toast.error(\"Password and confirm password do not match\");\n      return;\n    }\n    setIsLoading(true);\n    // Perform the reset password logic here\n    setTimeout(() => {\n      setIsLoading(false);\n      navigateTo(\"/login\"); // Redirect to login or homepage\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"full-screen-size gx-0 d-flex justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"414px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"border-transparent bg-transparent\",\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"logo\",\n              height: 75,\n              width: 360\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center mt-3 mb-5 color-half-white\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NormalInput, {\n            value: newPassword,\n            setValue: v => setNewPassword(v),\n            className: \"mb-3\",\n            placeholder: \"New Password\",\n            label: \"New Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NormalInput, {\n            value: confirmPassword,\n            setValue: v => setConfirmPassword(v),\n            className: \"mb-3\",\n            placeholder: \"Confirm Password\",\n            label: \"Confirm Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: newPassword === \"\" || confirmPassword === \"\",\n            className: \"cyan-btn mt-5 full-width\",\n            onClick: handleResetPassword,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 28\n            }, this) : \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"vSkkNhNbNhSpwjPo++IIlRKyMQU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["Button","Card","CardBody","Col","Row","Spinner","Toast","ToastBody","ToastHeader","NormalInput","useState","useNavigate","toast","useLocation","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","showToast","setShowToast","navigateTo","location","queryParams","URLSearchParams","search","resetCode","get","handleResetPassword","error","setTimeout","className","children","style","width","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","value","setValue","v","placeholder","label","type","disabled","onClick","size","_c","$RefreshReg$"],"sources":["/Users/apple/Documents/Development/Project-system/src/pages/auth/ResetPassword.js"],"sourcesContent":["import {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Row,\n  Spinner,\n  Toast,\n  ToastBody,\n  ToastHeader,\n} from \"reactstrap\";\nimport NormalInput from \"../../components/inputs/NormalInput\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const navigateTo = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const resetCode = queryParams.get(\"resetCode\");\n\n  const handleResetPassword = () => {\n    if (newPassword !== confirmPassword) {\n      toast.error(\"Password and confirm password do not match\");\n      return;\n    }\n    setIsLoading(true);\n    // Perform the reset password logic here\n    setTimeout(() => {\n      setIsLoading(false);\n      navigateTo(\"/login\"); // Redirect to login or homepage\n    }, 2000);\n  };\n\n  return (\n    <Row className=\"full-screen-size gx-0 d-flex justify-content-center align-items-center\">\n      <div style={{ width: \"414px\" }}>\n        <Card className=\"border-transparent bg-transparent\">\n          <CardBody className=\"text-center\">\n            <div className=\"auth-logo-container\">\n              <img alt=\"logo\" height={75} width={360} />\n            </div>\n            <h5 className=\"text-center mt-3 mb-5 color-half-white\">\n              Reset Password\n            </h5>\n            <NormalInput\n              value={newPassword}\n              setValue={(v) => setNewPassword(v)}\n              className=\"mb-3\"\n              placeholder={\"New Password\"}\n              label={\"New Password\"}\n              type=\"password\"\n            />\n            <NormalInput\n              value={confirmPassword}\n              setValue={(v) => setConfirmPassword(v)}\n              className=\"mb-3\"\n              placeholder={\"Confirm Password\"}\n              label={\"Confirm Password\"}\n              type=\"password\"\n            />\n            <Button\n              disabled={newPassword === \"\" || confirmPassword === \"\"}\n              className=\"cyan-btn mt-5 full-width\"\n              onClick={handleResetPassword}\n            >\n              {isLoading ? <Spinner size={\"sm\"} /> : \"Reset\"}\n            </Button>\n          </CardBody>\n        </Card>\n      </div>\n    </Row>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}